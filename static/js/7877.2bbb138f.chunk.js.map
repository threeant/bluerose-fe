{"version":3,"file":"static/js/7877.2bbb138f.chunk.js","mappings":"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","sources":["views/system/AdminReg.js"],"sourcesContent":["import React, { useState } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CIcon from '@coreui/icons-react'\nimport { useNavigate } from 'react-router-dom'\nimport axiosInstance from '../../common/axiosInstance';\n\nimport { getCodeList, throwError } from '../../common/utils'\nimport {\n  cilCalendar,\n  cifUs,\n} from '@coreui/icons';\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CCardImage,\n  CCardText,\n  CFormTextarea,\n  CContainer,\n  CImage,\n  CFormSwitch,\n} from '@coreui/react';\nimport ReactImg from 'src/assets/images/image400.jpg'\nconst AdminReg = () => {\n\n  /**********************************************************************\n   * 공통 영역\n  **********************************************************************/\n  const navigate = useNavigate();\n\n  const [midiaCD] = useState(getCodeList('MEDIA')); // 미디어CD\n  const [cntryCD] = useState(getCodeList('CNTRY')); // 발매국가CD\n\n  //목록이동\n  const goListClick = () => {\n    navigate('/system/AdminList');\n  };\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleDateChange = date => {\n    const formattedDate = date.toISOString().slice(0, 10);\n    setSelectedDate(date);\n    setAdminData({ ...adminData, releaseDate: formattedDate })\n  }\n  const [validated, setValidated] = useState(false);\n\n  const [adminData, setAdminData] = useState({\n      \"etc\": \"\",\n      \"id\": \"\",\n      \"name\": \"\",\n      \"password\": \"\",\n      \"passwordChk\": \"\",\n      \"useYn\" : true\n      \n  });\n\n  //등록하기 API\n  const submitRegAlbum = async (e) => {\n    e.preventDefault();\n\n    console.log(adminData);\n\n    const result = window.confirm('해당 관리자를 등록 하시겠습니까?');\n\n    if (!result) {\n      return;\n    }\n    setValidated(true);\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      return;\n    }\n\n    if(adminData.password != adminData.passwordChk){\n      alert('비밀번호와 비밀번호 확인이 일치하지 않습니다');\n      setAdminData((prevData) => ({\n        ...prevData,\n        passwordChk: '',\n      }));\n      setValidated(false);\n      return;\n    }\n\n    try {\n      const response = await axiosInstance.post('/api/admin', adminData, {\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      });\n\n      console.log('API 응답:', response.data);\n\n      // 폼 데이터를 초기화합니다.\n      setAdminData({\n        \"etc\": \"\",\n        \"id\": \"\",\n        \"name\": \"\",\n        \"password\": \"\"\n    });\n      alert('등록되었습니다.');\n      navigate('/system/AdminList');\n    } catch (error) {\n      // API 요청이 실패한 경우 에러를 처리할 수 있습니다.\n      console.log(error);\n      throwError(error,navigate);\n    }\n\n  };\n  return (\n    <CContainer>\n      <CRow>\n        <CCol >\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>관리자등록</strong> <small></small>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                className=\"row g-3 needs-validation\"\n                noValidate\n                validated={validated}\n                onSubmit={submitRegAlbum}\n              >\n                {/* <CCol xs={10} >\n                  <CFormLabel></CFormLabel>\n                </CCol>\n                <CCol xs={2} >\n                  <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\n                  <CFormSwitch label=\"사용여부\" id=\"formSwitchCheckChecked\" defaultChecked={adminData.useYn} onChange={(e) => setAdminData({ ...adminData, useYn: e.target.value })} />\n                </CCol> */}\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputId\">아이디*</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputId\" required onChange={(e) => setAdminData({ ...adminData, id: e.target.value })} maxLength={10} />\n                  <CFormFeedback invalid>아이디를 입력해주세요.</CFormFeedback>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputName\">이름*</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputName\" required onChange={(e) => setAdminData({ ...adminData, name: e.target.value })} maxLength={10} />\n                  <CFormFeedback invalid>이름을 입력해주세요.</CFormFeedback>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputPw\">비밀번호*</CFormLabel>\n                  <CFormInput type=\"password\" id=\"inputPw\" required onChange={(e) => setAdminData({ ...adminData, password: e.target.value })} maxLength={20} />\n                  <CFormFeedback invalid>비밀번호을 입력해주세요.</CFormFeedback>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputPwChk\">비밀번호확인*</CFormLabel>\n                  <CFormInput type=\"password\" id=\"inputPwChk\" required onChange={(e) => setAdminData({ ...adminData, passwordChk: e.target.value })} maxLength={20} />\n                  <CFormFeedback invalid>비밀번호확인을 입력해주세요.</CFormFeedback>\n                </CCol>\n                <CCol xs={12}>\n                  <CFormLabel htmlFor=\"inputEtc\">비고</CFormLabel>\n                  <CFormTextarea id=\"inputEtc\" rows=\"3\" onChange={(e) => setAdminData({ ...adminData, etc: e.target.value })} ></CFormTextarea>\n                </CCol>\n                <div className=\"d-grid gap-2\">\n                  <CRow className=\"justify-content-between\">\n                    <CCol xs={12}>\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <CButton component=\"input\" type=\"button\" color=\"light\" value=\"목록\" onClick={goListClick} />\n                        <CButton component=\"input\" color=\"primary\" type=\"submit\" value=\"등록하기\" />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    </CContainer>\n  );\n};\n\nexport default AdminReg;\n"],"names":["AdminReg","navigate","useNavigate","midiaCD","useState","getCodeList","cntryCD","selectedDate","setSelectedDate","validated","setValidated","adminData","setAdminData","_jsx","CContainer","children","CRow","CCol","_jsxs","CCard","className","CCardHeader","CCardBody","CForm","noValidate","onSubmit","async","e","preventDefault","console","log","window","confirm","currentTarget","checkValidity","password","passwordChk","alert","prevData","response","axiosInstance","post","headers","data","error","throwError","stopPropagation","xs","CFormLabel","htmlFor","CFormInput","type","id","required","onChange","target","value","maxLength","CFormFeedback","invalid","name","CFormTextarea","rows","etc","CButton","component","color","onClick","goListClick"],"sourceRoot":""}