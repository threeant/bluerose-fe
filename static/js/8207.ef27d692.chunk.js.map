{"version":3,"file":"static/js/8207.ef27d692.chunk.js","mappings":"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","sources":["views/music/AlbumUpload.js","../node_modules/@coreui/icons/src/free/cil-data-transfer-down.ts"],"sourcesContent":["import React, { useState } from 'react'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CIcon from '@coreui/icons-react'\nimport { useNavigate } from 'react-router-dom'\nimport axiosInstance from '../../common/axiosInstance';\nimport {\n  cilDataTransferDown\n} from '@coreui/icons';\nimport { throwError } from '../../common/utils'\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormInput,\n  CRow,\n  CCardText,\n  CContainer,\n  CSpinner\n} from '@coreui/react';\nconst SampleForm = () => {\n\n  /**********************************************************************\n   * 공통 영역\n  **********************************************************************/\n  const navigate = useNavigate();\n\n  const [excelFile, setExcelFile] = useState(null);\n  const [loadingYn, setLoadingYn] = useState(false);\n  const [fileUploadYn, setFileUploadYn] = useState(false);\n  const [resultYn, setResultYn] = useState(false);\n  const [resultUrl, setResultUrl] = useState('');\n\n  \n\n  const handleImageChange = (event) => {\n    const file = event.target.files[0];\n    setExcelFile(file);\n  };\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n   \n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      return;\n    }\n    setResultYn(false);\n    const formData = new FormData();\n      formData.append('file', excelFile);\n      console.log(excelFile);\n    if(!excelFile){\n      alert('업로드할 파일을 선택하세요.');\n      return;\n    }\n\n    try {\n      setLoadingYn(true);\n      setFileUploadYn(true);\n      \n\n      const response = await axiosInstance.post('/api/albums/upload', formData, {\n        timeout: 10000000, // 10초 타임아웃\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        }\n      });\n\n      console.log('ResultUrl 응답:', response.data);\n      setResultUrl(response.data);\n\n      \n      alert('완료되었습니다.');\n      setResultYn(true);\n\n      //navigate('/sample/sampleList');\n    } catch (error) {\n      // API 요청이 실패한 경우 에러를 처리할 수 있습니다.\n      console.log(error);\n      throwError(error,navigate);\n      \n    }\n    setLoadingYn(false);\n  };\n\n  \n\n\n  //양식다운로드\n  const downloadForm = (url) => {\n    // 다운로드할 파일의 경로\n    const filePath = process.env.PUBLIC_URL + '/files/excel/form/excelUploadForm.xlsx'; // 예시 파일 경로\n    console.log('filePath');\n    console.log(filePath);\n    // 파일 다운로드\n    const downloadLink = document.createElement('a');\n    downloadLink.href = filePath;\n    downloadLink.download = filePath.substr(filePath.lastIndexOf('/') + 1);\n    document.body.appendChild(downloadLink);\n    console.log(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  //실패목록다운로드\n  const downloadFailForm = (url) => {\n    // 다운로드할 파일의 경로\n    var fileIndex = resultUrl.indexOf('/files/excel');\n    const filePath = process.env.PUBLIC_URL + resultUrl.substring(fileIndex); // 예시 파일 경로\n \n    // 파일 다운로드\n    const downloadLink = document.createElement('a');\n    downloadLink.href = filePath;\n    downloadLink.download = filePath.substr(filePath.lastIndexOf('/') + 1);\n    document.body.appendChild(downloadLink);\n    console.log(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  const refreshPage = () => {\n\n    window.location.reload(); // 페이지 새로고침\n  }\n  \n\n  return (\n    <CContainer>\n      <CRow>\n        \n      <CCol >\n          <CCard className=\"mb-4\">\n          \n            <CCardHeader>\n              <strong>대용량업로드</strong> <small>{loadingYn ? '진행중인 경우 새로고침을 하지마세요.' : '양식에 맞게 등록해 주세요.' }</small>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                className=\"row g-3 needs-validation\"\n                noValidate\n                validated={validated}\n                onSubmit={handleSubmit}\n              >\n                \n                <CCol xs={12}>\n                  <CCardBody>\n                    <CCardText>\n                      <CFormInput type=\"file\" id=\"formFile\" accept=\".xlsx, .xls\" onChange={handleImageChange} disabled={fileUploadYn}/>\n                    </CCardText>\n                  </CCardBody>\n                </CCol>\n\n                \n                <div className=\"d-grid gap-2\">\n                  <CRow className=\"justify-content-between\">\n                    <CCol xs={12}>\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                      <CButton color=\"light\" onClick={downloadForm}>\n                        <CIcon icon={cilDataTransferDown} title=\"Download file\"  ></CIcon> 양식다운로드\n                      </CButton>\n                      {loadingYn ? (\n                            <CButton color=\"primary\" disabled>\n                              <CSpinner as=\"span\" size=\"sm\" aria-hidden=\"true\" />\n                              진행중...\n                            </CButton>\n                          ) : (\n                            resultYn ? (\n                              <CButton component=\"input\" color=\"danger\" onClick={refreshPage} value=\"다시 등록하기\" />\n                            ) : (\n                              <CButton component=\"input\" color=\"primary\" type=\"submit\" value=\"등록하기\" />\n                            )\n                          )}\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n{resultYn ? \n      <CRow>\n      <CCol >\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>대용량업로드 결과</strong> <small></small>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                className=\"row g-3 needs-validation\"\n                noValidate\n                validated={validated}\n                onSubmit={handleSubmit}\n              >\n                \n                <CCol xs={12}>\n                  <CCardBody>\n                    <CCardText>\n                      업로드 완료. 실패목록을 다운로드하여 확인하세요.\n                    </CCardText>\n                  </CCardBody>\n                </CCol>\n\n                \n                <div className=\"d-grid gap-2\">\n                  <CRow className=\"justify-content-between\">\n                    <CCol xs={12}>\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                      <CButton color=\"primary\" onClick={downloadFailForm}>\n                        <CIcon icon={cilDataTransferDown} title=\"Download file\"  ></CIcon> 실패목록 다운로드\n                      </CButton>\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n   : ''}\n    </CContainer>\n  );\n};\n\nexport default SampleForm;\n","export var cilDataTransferDown = [\"512 512\", \"<rect width='480' height='32' x='16' y='464' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/><polygon fill='var(--ci-primary-color, currentColor)' points='395.313 299.313 372.687 276.687 280 369.373 280 16 248 16 248 369.373 155.313 276.687 132.687 299.313 264 430.627 395.313 299.313' class='ci-primary'/>\"];\n"],"names":["SampleForm","navigate","useNavigate","excelFile","setExcelFile","useState","loadingYn","setLoadingYn","fileUploadYn","setFileUploadYn","resultYn","setResultYn","resultUrl","setResultUrl","validated","setValidated","handleSubmit","async","e","preventDefault","currentTarget","checkValidity","stopPropagation","formData","FormData","append","console","log","response","axiosInstance","post","timeout","headers","data","alert","error","throwError","_jsxs","CContainer","children","_jsx","CRow","CCol","CCard","className","CCardHeader","CCardBody","CForm","noValidate","onSubmit","xs","CCardText","CFormInput","type","id","accept","onChange","event","file","target","files","disabled","CButton","color","onClick","url","filePath","process","downloadLink","document","createElement","href","download","substr","lastIndexOf","body","appendChild","click","removeChild","CIcon","icon","cilDataTransferDown","title","CSpinner","as","size","component","refreshPage","window","location","reload","value","fileIndex","indexOf","substring"],"sourceRoot":""}