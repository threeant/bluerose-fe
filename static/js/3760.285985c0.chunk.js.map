{"version":3,"file":"static/js/3760.285985c0.chunk.js","mappings":"6TAiCA,MAoRA,EApRmBA,KAMjB,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,IAAWC,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAY,WAChCC,IAAWF,EAAAA,EAAAA,WAASC,EAAAA,EAAAA,IAAY,WAKhCE,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,OAC1CK,EAAeC,IAAoBN,EAAAA,EAAAA,UAAS,MAuB7CO,EAAcC,IAClBC,QAAQC,IAAI,SACZD,QAAQC,IAAIF,EAAI,GAGXG,EAAaC,IAAkBZ,EAAAA,EAAAA,UAAS,CAC7C,OAAU,GACV,eAAkB,GAClB,WAAc,GACd,KAAQ,GACR,KAAQ,EACR,KAAQ,EACR,iBAAoB,GACpB,UAAa,MAIRa,EAAWC,IAAgBd,EAAAA,EAAAA,UAAS,CAAEe,SAAU,KAOjDC,EAAYA,CAACC,EAAGC,KACpBD,EAAEE,iBACFV,QAAQC,IAAI,gBAAkBQ,EAAK,EAI/BE,EAAeC,UAEnBZ,QAAQC,IAAIC,GAEZ,IACE,MAKMW,SALiBC,EAAAA,EAAMC,IAAI,mCAAoC,CACnEC,OAAQd,KAIYW,KAEtBR,EAAaQ,GAEbb,QAAQC,IAAIY,EAEd,CAAE,MAAOI,GAEPjB,QAAQC,IAAIgB,IACZC,EAAAA,EAAAA,IAAWD,EAAM7B,EACnB,GAMF,OACE+B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAI,CAAAD,UACHF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAAAF,UACHG,EAAAA,EAAAA,MAACC,EAAAA,GAAK,CAACC,UAAU,OAAML,SAAA,EACrBF,EAAAA,EAAAA,KAACQ,EAAAA,GAAW,CAAAN,SAAC,0CACbG,EAAAA,EAAAA,MAACI,EAAAA,GAAS,CAAAP,SAAA,EACRG,EAAAA,EAAAA,MAACK,EAAAA,GAAK,CAACH,UAAU,MAAMI,SA5CbtB,IACpBA,EAAEE,iBACFC,GAAc,EA0C0CU,SAAA,EAC5CG,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAACI,UAAU,OAAML,SAAA,EACpBF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVF,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CAACC,QAAQ,aAAaP,UAAU,iBAAgBL,SAAC,0BAE9DF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVG,EAAAA,EAAAA,MAACU,EAAAA,GAAW,CAACC,GAAG,aAAa,aAAW,qBAAMC,SAAW5B,GAAML,EAAe,IAAKD,EAAamC,UAAW7B,EAAE8B,OAAOC,QAASlB,SAAA,EAC3HF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,mBACP/B,EAAQkD,KAAI,CAACC,EAAMC,KAClBvB,EAAAA,EAAAA,KAAA,UAAQoB,MAAOE,EAAKN,GAAGd,SAAcoB,EAAKE,MAAbD,WAInCvB,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVF,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CAACC,QAAQ,kBAAkBP,UAAU,iBAAgBL,SAAE,oBAEpEF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVF,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CAACC,KAAK,OAAOV,GAAG,kBAAkB,aAAW,eAAKW,YAAY,eAAKV,SAAW5B,GAAML,EAAe,IAAKD,EAAa6C,WAAYvC,EAAE8B,OAAOC,gBAGzJf,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAACI,UAAU,OAAML,SAAA,EACpBF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVF,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CAACC,QAAQ,YAAYP,UAAU,iBAAgBL,SAAC,0BAE7DF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVF,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CAACC,KAAK,OAAOV,GAAG,YAAY,aAAW,qBAAMW,YAAY,eAAKV,SAAW5B,GAAML,EAAe,IAAKD,EAAayC,KAAMnC,EAAE8B,OAAOC,aAE5IpB,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVF,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CAACC,QAAQ,cAAcP,UAAU,iBAAgBL,SAAC,gCAE/DF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACyB,GAAI,EAAE3B,UACVF,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CAACC,KAAK,OAAOV,GAAG,cAAc,aAAW,2BAAOW,YAAY,eAAKV,SAAW5B,GAAML,EAAe,IAAKD,EAAa+C,OAAQzC,EAAE8B,OAAOC,gBAGnJf,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAACI,UAAU,OAAML,SAAA,EAYpBF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACyB,GAAI,EAAE3B,UACVF,EAAAA,EAAAA,KAACa,EAAAA,GAAU,CAACC,QAAQ,cAAcP,UAAU,iBAAgBL,SAAC,0BAE/DF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACyB,GAAI,EAAE3B,UACVG,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAEC,QAAS,QAAS9B,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,OAAK+B,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,YAAa,GAAIhC,UACpEF,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CAAC5B,UAAU,iBAAiB6B,KAAMC,EAAAA,EAAaC,KAAK,UAE5DtC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACuC,IAAU,CACTC,SAAUzD,EAAY0D,iBACtBxB,SAAW5B,GAAML,EAAe,IAAKD,EAAa0D,iBAAkBpD,EAAE8B,OAAOC,QAC7EsB,WAAY,aACZC,qBAAmB,EACnBC,QAAS,IAAIC,KAAK,cAClBC,QAAS,IAAID,KACbtC,UAAU,kBAGdP,EAAAA,EAAAA,KAAA,OAAK+B,MAAO,CAAEgB,WAAY,WAAYf,QAAS,OAAQC,WAAY,UAAW/B,UAC5EF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,WAERF,EAAAA,EAAAA,KAAA,OAAK+B,MAAO,CAAEC,QAAS,OAAQC,WAAY,SAAUC,YAAa,GAAIhC,UACpEF,EAAAA,EAAAA,KAACmC,EAAAA,EAAK,CAAC5B,UAAU,iBAAiB6B,KAAMC,EAAAA,EAAaC,KAAK,UAE5DtC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACuC,IAAU,CACTC,SAAUzD,EAAYiE,eACtB/B,SAAW5B,GAAML,EAAe,IAAKD,EAAaiE,eAAgB3D,EAAE8B,OAAOC,QAC3EsB,WAAY,aACZC,qBAAmB,EACnBC,QAAS,IAAIC,KAAK,cAClBC,QAAS,IAAID,KACbtC,UAAU,0BAMpBP,EAAAA,EAAAA,KAAA,OAAKO,UAAU,eAAcL,UAC3BG,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAACI,UAAU,0BAAyBL,SAAA,EACvCF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVF,EAAAA,EAAAA,KAACiD,EAAAA,GAAO,CAACC,UAAU,QAAQxB,KAAK,SAASyB,MAAM,SAAS/B,MAAM,2BAAOgC,QA3JrEC,KAClBpF,EAAS,qBAAqB,OA4Jd+B,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACQ,GAAI,EAAEV,UACVG,EAAAA,EAAAA,MAAA,OAAKE,UAAU,gDAA+CL,SAAA,EAC5DF,EAAAA,EAAAA,KAACiD,EAAAA,GAAO,CAACC,UAAU,QAAQxB,KAAK,QAAQyB,MAAM,QAAQ/B,MAAM,qBAAMgC,QAvKrEE,IACjB9E,EAAgB,MAChBE,EAAiB,KAAK,KAsKFsB,EAAAA,EAAAA,KAACiD,EAAAA,GAAO,CAACC,UAAU,QAAQC,MAAM,UAAUzB,KAAK,SAASN,MAAM,2CAMzEpB,EAAAA,EAAAA,KAAA,UACAK,EAAAA,EAAAA,MAACkD,EAAAA,GAAM,CAACC,MAAM,SAASjD,UAAU,cAAckD,OAAK,EAACC,YAAU,EAAAxD,SAAA,EAC7DF,EAAAA,EAAAA,KAAC2D,EAAAA,GAAU,CAACR,MAAM,QAAOjD,UACvBG,EAAAA,EAAAA,MAACuD,EAAAA,GAAS,CAAA1D,SAAA,EACRF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAACtD,UAAU,cAAaL,SAAC,QAC1CF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAACtD,UAAU,cAAaL,SAAC,wBAC1CF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAACtD,UAAU,iBAC5BP,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAACtD,UAAU,cAAaL,SAAC,wBAC1CF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAACtD,UAAU,cAAaL,SAAC,8BAC1CF,EAAAA,EAAAA,KAAC6D,EAAAA,GAAgB,CAACtD,UAAU,cAAaL,SAAC,6BAG9CF,EAAAA,EAAAA,KAAC8D,EAAAA,GAAU,CAAA5D,SACRjB,EAAUE,UAAYF,EAAUE,SAAS4E,OAAS,EACjD9E,EAAUE,SAASkC,KAAI,CAACC,EAAMC,KAC5BlB,EAAAA,EAAAA,MAACuD,EAAAA,GAAS,CAAC,QAAM,qBAAiCR,QAASzE,EAAYuB,SAAA,EACrEF,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACzD,UAAU,cAAaL,UACrCF,EAAAA,EAAAA,KAAA,UAAAE,SAASoB,EAAKN,QAEhBhB,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACzD,UAAU,cAAaL,UACrCF,EAAAA,EAAAA,KAAA,UAAAE,SAASoB,EAAK2C,eAEhBjE,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACzD,UAAU,cAAaL,UACrCF,EAAAA,EAAAA,KAACkE,EAAAA,GAAO,CAAC5B,KAAK,KAAK6B,IAAI,gDAEzBnE,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACzD,UAAU,cAAaL,UACrCF,EAAAA,EAAAA,KAAA,KAAGoE,KAAK,IAAGlE,SAAEoB,EAAKE,UAEpBxB,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACzD,UAAU,cAAaL,SACpCoB,EAAKQ,UAER9B,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACzD,UAAU,cAAaL,SACpCoB,EAAK+C,gBAjBiC9C,MAuB3CvB,EAAAA,EAAAA,KAAC4D,EAAAA,GAAS,CAAC,QAAM,qBAAoB1D,UACnCF,EAAAA,EAAAA,KAACgE,EAAAA,GAAc,CAACzD,UAAU,cAAc+D,QAAS,EAAEpE,SAAS,yEAAH,WAQnEF,EAAAA,EAAAA,KAAA,SACCf,EAAUE,UAAYF,EAAUE,SAAS4E,OAAS,GACjD1D,EAAAA,EAAAA,MAACF,EAAAA,GAAI,CAAAD,SAAA,EACHF,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACyB,GAAI,CAAE0C,KAAM,EAAGC,OAAQ,GAAItE,UAC/BG,EAAAA,EAAAA,MAACoE,EAAAA,GAAW,CAAC,aAAW,0BAAyBvE,SAAA,EAC/CF,EAAAA,EAAAA,KAAC0E,EAAAA,GAAe,CAAC,aAAW,WAAWC,UAAW1F,EAAU2F,MAAOxB,QAAU/D,GAAMD,EAAUC,EAAG,GAAGa,UACjGF,EAAAA,EAAAA,KAAA,QAAM,cAAY,OAAME,SAAC,WAE1B2E,MAAMC,KAAK,CAAEf,OAAQ9E,EAAU8F,aAAc,CAACC,EAAGzD,KAChDvB,EAAAA,EAAAA,KAAC0E,EAAAA,GAAe,CAAaO,QAAM,EAAC7B,QAAU/D,GAAMD,EAAUC,EAAGkC,EAAQ,GAAGrB,SAAEqB,EAAQ,GAAhEA,MAExBvB,EAAAA,EAAAA,KAAC0E,EAAAA,GAAe,CAAC,aAAW,OAAOC,UAAW1F,EAAUiG,KAAKhF,UAC3DF,EAAAA,EAAAA,KAAA,QAAM,cAAY,OAAME,SAAC,iBAI/BG,EAAAA,EAAAA,MAACD,EAAAA,GAAI,CAACyB,GAAI,EAAE3B,SAAA,CAAC,UACRjB,EAAUkG,WAAW,eAG1B,cAKX,C","sources":["views/sample/SampleList.js"],"sourcesContent":["import React, { useState } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CIcon from '@coreui/icons-react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { getCodeList, throwError } from '../../common/utils'\nimport {\n  CAvatar,\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n  CFormSelect,\n  CFormLabel,\n  CFormInput,\n  CForm,\n  CPagination,\n  CPaginationItem,\n} from '@coreui/react'\n\nimport {\n  cilCalendar\n} from '@coreui/icons'\n\nconst SampleList = () => {\n\n\n  /**********************************************************************\n   * 공통 영역\n  **********************************************************************/\n  const navigate = useNavigate();\n\n  const [midiaCD] = useState(getCodeList('MEDIA')); // 미디어CD\n  const [cntryCD] = useState(getCodeList('CNTRY')); // 발매국가CD\n\n  /**********************************************************************\n   * 변수 영역\n  **********************************************************************/\n  const [selectedDate, setSelectedDate] = useState(null); //등록일 from\n  const [selectedDate2, setSelectedDate2] = useState(null); // 등록일 to\n\n\n  // 날짜가 선택될 때 호출될 콜백 함수\n  const handleDateChange = date => {\n    setSelectedDate(date);\n\n  }\n  const handleDateChange2 = date => {\n    setSelectedDate2(date);\n  }\n  const clickReset = date => {\n    setSelectedDate(null);\n    setSelectedDate2(null);\n  }\n\n  /**********************************************************************\n  * 비즈니스로직 영역\n **********************************************************************/\n  const goFormClick = () => { //등록화면이동\n    navigate('/sample/sampleForm');\n  }\n\n  const clickDetail = key => { //디테일이동\n    console.log('KEY??');\n    console.log(key);\n  }\n\n  const [albumSearch, setAlbumSearch] = useState({\n    \"artist\": \"\",\n    \"endReleaseDate\": \"\",\n    \"musicGenre\": \"\",\n    \"name\": \"\",\n    \"page\": 1,\n    \"size\": 1,\n    \"startReleaseDate\": \"\",\n    \"mediaCode\": \"\"\n  });\n\n\n  const [albumData, setAlbumData] = useState({ contents: [] });\n\n  const submitSearch = (e) => {\n    e.preventDefault();\n    handleSubmit()\n  }\n\n  const clickPage = (e, page) => {\n    e.preventDefault();\n    console.log(\"===page =  : \" + page);\n  }\n\n\n  const handleSubmit = async () => {\n\n    console.log(albumSearch);\n\n    try {\n      const response = await axios.get('http://localhost:8080/api/albums', {\n        params: albumSearch\n      });\n\n      // API 응답에서 데이터 추출\n      const data = response.data;\n      // 데이터를 상태 변수에 저장\n      setAlbumData(data);\n\n      console.log(data)\n\n    } catch (error) {\n      // API 요청이 실패한 경우 에러를 처리할 수 있습니다.\n      console.log(error);\n      throwError(error,navigate);\n    }\n\n  };\n\n\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          <CCard className=\"mb-4\">\n            <CCardHeader>샘플정보관리</CCardHeader>\n            <CCardBody>\n              <CForm className=\"row\" onSubmit={submitSearch}>\n                <CRow className=\"mb-3\">\n                  <CCol xs={1}>\n                    <CFormLabel htmlFor=\"inputMedia\" className=\"col-form-label\">미디어</CFormLabel>\n                  </CCol>\n                  <CCol xs={5}>\n                    <CFormSelect id=\"inputMedia\" aria-label=\"미디어\" onChange={(e) => setAlbumSearch({ ...albumSearch, mediaCode: e.target.value })}>\n                      <option>-전체-</option>\n                      {midiaCD.map((item, index) => (\n                        <option value={item.id} key={index}>{item.name}</option>\n                      ))}\n                    </CFormSelect>\n                  </CCol>\n                  <CCol xs={1}>\n                    <CFormLabel htmlFor=\"inputMusicGenre\" className=\"col-form-label\" >장르</CFormLabel>\n                  </CCol>\n                  <CCol xs={5}>\n                    <CFormInput type=\"text\" id=\"inputMusicGenre\" aria-label=\"장르\" placeholder=\"전체\" onChange={(e) => setAlbumSearch({ ...albumSearch, musicGenre: e.target.value })} />\n                  </CCol>\n                </CRow>\n                <CRow className=\"mb-3\">\n                  <CCol xs={1}>\n                    <CFormLabel htmlFor=\"inputName\" className=\"col-form-label\">앨범명</CFormLabel>\n                  </CCol>\n                  <CCol xs={5}>\n                    <CFormInput type=\"text\" id=\"inputName\" aria-label=\"앨범명\" placeholder=\"전체\" onChange={(e) => setAlbumSearch({ ...albumSearch, name: e.target.value })} />\n                  </CCol>\n                  <CCol xs={1}>\n                    <CFormLabel htmlFor=\"inputArtist\" className=\"col-form-label\">아티스트</CFormLabel>\n                  </CCol>\n                  <CCol md={5}>\n                    <CFormInput type=\"text\" id=\"inputArtist\" aria-label=\"아티스트\" placeholder=\"전체\" onChange={(e) => setAlbumSearch({ ...albumSearch, artist: e.target.value })} />\n                  </CCol>\n                </CRow>\n                <CRow className=\"mb-3\">\n                  {/* <CCol xs={1}>\n                    <CFormLabel htmlFor=\"txt_country\" className=\"col-form-label\">발매국가</CFormLabel>\n                  </CCol>\n                  <CCol xs={5}>\n                    <CFormSelect id=\"txt_country\" aria-label=\"발매국가\" onChange={(e) => setAlbumSearch({ ...albumSearch, artist: e.target.value })}>\n                      <option>-전체-</option>\n                      {cntryCD.map((item, index) => (\n                        <option value={item.id} key={index}>{item.name}</option>\n                      ))}\n                    </CFormSelect>\n                  </CCol> */}\n                  <CCol md={1}>\n                    <CFormLabel htmlFor=\"inputEmail3\" className=\"col-form-label\">등록일</CFormLabel>\n                  </CCol>\n                  <CCol md={5}>\n                    <div style={{ display: 'flex' }}>\n                      <div style={{ display: 'grid', placeItems: 'center', marginRight: 5 }}>\n                        <CIcon className=\"text-secondary\" icon={cilCalendar} size=\"lg\" />\n                      </div>\n                      <div>\n                        <DatePicker\n                          selected={albumSearch.startReleaseDate}\n                          onChange={(e) => setAlbumSearch({ ...albumSearch, startReleaseDate: e.target.value })}\n                          dateFormat={'yyyy-MM-dd'} // 날짜 형태\n                          shouldCloseOnSelect // 날짜를 선택하면 datepicker가 자동으로 닫힘\n                          minDate={new Date('2000-01-01')} // minDate 이전 날짜 선택 불가\n                          maxDate={new Date()} // maxDate 이후 날짜 선택 불가\n                          className=\"DatePicker\"\n                        />\n                      </div>\n                      <div style={{ whiteSpace: 'pre-wrap', display: 'grid', placeItems: 'center' }}>\n                        <span> ~ </span>\n                      </div>\n                      <div style={{ display: 'grid', placeItems: 'center', marginRight: 5 }}>\n                        <CIcon className=\"text-secondary\" icon={cilCalendar} size=\"lg\" />\n                      </div>\n                      <div>\n                        <DatePicker\n                          selected={albumSearch.endReleaseDate}\n                          onChange={(e) => setAlbumSearch({ ...albumSearch, endReleaseDate: e.target.value })}\n                          dateFormat={'yyyy-MM-dd'} // 날짜 형태\n                          shouldCloseOnSelect // 날짜를 선택하면 datepicker가 자동으로 닫힘\n                          minDate={new Date('2000-01-01')} // minDate 이전 날짜 선택 불가\n                          maxDate={new Date()} // maxDate 이후 날짜 선택 불가\n                          className=\"DatePicker\"\n                        />\n                      </div>\n                    </div>\n                  </CCol>\n                </CRow>\n                <div className=\"d-grid gap-2\">\n                  <CRow className=\"justify-content-between\">\n                    <CCol xs={4}>\n                      <CButton component=\"input\" type=\"button\" color=\"danger\" value=\"등록하기\" onClick={goFormClick} />\n                    </CCol>\n                    <CCol xs={4}>\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <CButton component=\"input\" type=\"reset\" color=\"light\" value=\"초기화\" onClick={clickReset} />\n                        <CButton component=\"input\" color=\"primary\" type=\"submit\" value=\"조회하기\" />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CForm>\n              <br />\n              <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n                <CTableHead color=\"light\">\n                  <CTableRow>\n                    <CTableHeaderCell className=\"text-center\">No</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">미디어</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\"></CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">앨범명</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">아티스트</CTableHeaderCell>\n                    <CTableHeaderCell className=\"text-center\">발매일</CTableHeaderCell>\n                  </CTableRow>\n                </CTableHead>\n                <CTableBody>\n                  {albumData.contents && albumData.contents.length > 0 ? (\n                    albumData.contents.map((item, index) => (\n                      <CTableRow v-for=\"item in tableItems\" key={index} onClick={clickDetail}>\n                        <CTableDataCell className=\"text-center\">\n                          <strong>{item.id}</strong>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-center\">\n                          <strong>{item.mediaName}</strong>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-center\">\n                          <CAvatar size=\"md\" src=\"/static/media/8.35ee8919ea545620a475.jpg\" />\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-center\">\n                          <a href='/'>{item.name}</a>\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-center\">\n                          {item.artist}\n                        </CTableDataCell>\n                        <CTableDataCell className=\"text-center\">\n                          {item.releaseDate}\n                        </CTableDataCell>\n                      </CTableRow>\n                    ))\n                  ) :\n                    (\n                      <CTableRow v-for=\"item in tableItems\" >\n                        <CTableDataCell className=\"text-center\" colSpan={6} key={0}>\n                          조회된 데이터가 없습니다.\n                        </CTableDataCell>\n                      </CTableRow>\n                    )\n                  }\n                </CTableBody>\n              </CTable>\n              <br />\n              {albumData.contents && albumData.contents.length > 0 ? (\n                <CRow>\n                  <CCol md={{ span: 6, offset: 5 }}>\n                    <CPagination aria-label=\"Page navigation example\">\n                      <CPaginationItem aria-label=\"Previous\" disabled={!albumData.first} onClick={(e) => clickPage(e, 1)}>\n                        <span aria-hidden=\"true\">&laquo;</span>\n                      </CPaginationItem>\n                      {Array.from({ length: albumData.totalPages }, (_, index) => (\n                        <CPaginationItem key={index} active onClick={(e) => clickPage(e, index + 1)}>{index + 1}</CPaginationItem>\n                      ))}\n                      <CPaginationItem aria-label=\"Next\" disabled={!albumData.last}>\n                        <span aria-hidden=\"true\">&raquo;</span>\n                      </CPaginationItem>\n                    </CPagination>\n                  </CCol>\n                  <CCol md={1}>\n                    총 {albumData.totalCount}건\n                  </CCol>\n                </CRow>\n              ) : ''}\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    </>\n  )\n}\n\nexport default SampleList\n"],"names":["SampleList","navigate","useNavigate","midiaCD","useState","getCodeList","cntryCD","selectedDate","setSelectedDate","selectedDate2","setSelectedDate2","clickDetail","key","console","log","albumSearch","setAlbumSearch","albumData","setAlbumData","contents","clickPage","e","page","preventDefault","handleSubmit","async","data","axios","get","params","error","throwError","_jsx","_Fragment","children","CRow","CCol","_jsxs","CCard","className","CCardHeader","CCardBody","CForm","onSubmit","xs","CFormLabel","htmlFor","CFormSelect","id","onChange","mediaCode","target","value","map","item","index","name","CFormInput","type","placeholder","musicGenre","md","artist","style","display","placeItems","marginRight","CIcon","icon","cilCalendar","size","DatePicker","selected","startReleaseDate","dateFormat","shouldCloseOnSelect","minDate","Date","maxDate","whiteSpace","endReleaseDate","CButton","component","color","onClick","goFormClick","date","CTable","align","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CTableBody","length","CTableDataCell","mediaName","CAvatar","src","href","releaseDate","colSpan","span","offset","CPagination","CPaginationItem","disabled","first","Array","from","totalPages","_","active","last","totalCount"],"sourceRoot":""}