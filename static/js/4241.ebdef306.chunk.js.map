{"version":3,"file":"static/js/4241.ebdef306.chunk.js","mappings":"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","sources":["views/sample/SampleForm.js"],"sourcesContent":["import React, { useState } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CIcon from '@coreui/icons-react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { getCodeList, throwError } from '../../common/utils'\nimport {\n  cilCalendar,\n  cifUs,\n} from '@coreui/icons';\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CCardImage,\n  CCardText,\n  CFormTextarea,\n  CContainer,\n  CImage,\n  CFormSwitch,\n} from '@coreui/react';\nimport ReactImg from 'src/assets/images/image400.jpg'\nconst SampleForm = () => {\n\n  /**********************************************************************\n   * 공통 영역\n  **********************************************************************/\n  const navigate = useNavigate();\n\n  const [midiaCD] = useState(getCodeList('MEDIA')); // 미디어CD\n  const [cntryCD] = useState(getCodeList('CNTRY')); // 발매국가CD\n\n  const goListClick = () => {\n    navigate('/sample/sampleList');\n  };\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleDateChange = date => {\n    const formattedDate = date.toISOString().slice(0, 10);\n    console.log(formattedDate);\n    setSelectedDate(date);\n    console.log(selectedDate);\n    setAlbumData({ ...albumData, releaseDate: formattedDate })\n  }\n  const [validated, setValidated] = useState(false);\n\n  const [albumData, setAlbumData] = useState({\n    //image : '',        //이미지\n    name: '',        //앨범명\n    artist: '',      //아티스트\n    label: '',       //라벨\n    format: '',      //포맷\n    releaseDate: '',      //발매일\n    musicGenre: '',      //장르\n    countryCD: '9',        //발매국가\n    mediaCD: '1',        //미디어\n    style: '',       //스타일\n    series: '',      //시리즈\n    useYn: true,      //사용여부\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    console.log(albumData);\n    setValidated(true);\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:8080/api/albums', albumData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        }\n      });\n\n      console.log('API 응답:', response.data);\n\n      // 폼 데이터를 초기화합니다.\n      setAlbumData({\n        name: '',        //앨범명\n        artist: '',      //아티스트\n        label: '',       //라벨\n        format: '',      //포맷\n        releaseDate: '2023-10-28',      //발매일\n        musicGenre: '',      //장르\n        countryCD: '9',        //발매국가\n        mediaCD: '1',        //미디어\n        style: '',       //스타일\n        series: '',      //시리즈\n        useYn: true,      //사용여부\n      });\n      alert('등록되었습니다.');\n      navigate('/sample/sampleList');\n    } catch (error) {\n      // API 요청이 실패한 경우 에러를 처리할 수 있습니다.\n      console.log(error);\n      throwError(error,navigate);\n    }\n\n  };\n  return (\n    <CContainer>\n      <CRow>\n        <CCol >\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>샘플등록</strong> <small>샘플수정입니다.</small>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                className=\"row g-3 needs-validation\"\n                noValidate\n                validated={validated}\n                onSubmit={handleSubmit}\n              >\n                <CCol xs={12} >\n                  <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\n                  <CFormSwitch label=\"사용여부\" id=\"formSwitchCheckChecked\" defaultChecked={albumData.useYn} onChange={(e) => setAlbumData({ ...albumData, useYn: e.target.value })} />\n                </CCol>\n                <CCol xs={12}>\n                  <CImage rounded thumbnail align=\"center\" src={ReactImg} width={150} height={150} />\n                  <CCardBody>\n                    <CCardText>\n                      <CFormInput type=\"file\" id=\"formFile\" />\n                    </CCardText>\n                  </CCardBody>\n                </CCol>\n\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"lab_media\">미디어*</CFormLabel>\n                  <CFormSelect id=\"sel_media\" defaultValue={albumData.media} onChange={(e) => setAlbumData({ ...albumData, media: e.target.value })}  >\n                    {midiaCD.map((item, index) => (\n                      <option value={item.id} key={index}>{item.name}</option>\n                    ))}\n                  </CFormSelect>\n                  <CFormFeedback invalid>미디어를 선택해주세요</CFormFeedback>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputLabel\">Label</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputLabel\" defaultValue=\"\" />\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputName\">앨범명*</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputName\" defaultValue=\"\" required onChange={(e) => setAlbumData({ ...albumData, name: e.target.value })} />\n                  <CFormFeedback invalid>앨범명을 입력해주세요.</CFormFeedback>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputAartist\">아티스트*</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputAartist\" defaultValue=\"\" required onChange={(e) => setAlbumData({ ...albumData, artist: e.target.value })} />\n                  <CFormFeedback invalid>아티스트를 입력해주세요.</CFormFeedback>\n                </CCol>\n\n                <CCol md={12}>\n                  <CFormLabel htmlFor=\"inputSeries\">Series</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputSeries\" onChange={(e) => setAlbumData({ ...albumData, series: e.target.value })} />\n                </CCol>\n\n                <CCol xs={12}>\n                  <CFormLabel htmlFor=\"inputFormat\">Format</CFormLabel>\n                  <CFormTextarea id=\"inputFormat\" rows=\"3\"></CFormTextarea>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputCountry\">발매국가*</CFormLabel>\n                  <div >\n                    <CFormSelect id=\"inputCountry\" onChange={(e) => setAlbumData({ ...albumData, country: e.target.value })}>\n                      {cntryCD.map((item, index) => (\n                        <option value={item.id} key={index}>{item.name}</option>\n                      ))}\n                    </CFormSelect>\n                    <CFormFeedback invalid>발매국가를 선택해주세요.</CFormFeedback>\n                  </div>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputReleaseDate\">발매일</CFormLabel>\n                  <div style={{ display: 'flex', width: '100%' }}>\n                    <div style={{ display: 'grid', placeItems: 'center', marginRight: 5 }}>\n                      <CIcon className=\"text-secondary\" icon={cilCalendar} size=\"lg\" />\n                    </div>\n                    <div style={{ width: '90%' }}>\n                      <DatePicker\n                        selected={selectedDate}\n                        onChange={handleDateChange}\n                        dateFormat={'yyyy-MM-dd'} // 날짜 형태\n                        shouldCloseOnSelect // 날짜를 선택하면 datepicker가 자동으로 닫힘\n                        minDate={new Date('2000-01-01')} // minDate 이전 날짜 선택 불가\n                        maxDate={new Date()} // maxDate 이후 날짜 선택 불가\n                        className=\"DatePicker\"\n                      />\n                    </div>\n                  </div>\n                </CCol>\n                <CCol md={12}>\n                  <CFormLabel htmlFor=\"txt_genre\">장르</CFormLabel>\n                  <CFormInput type=\"text\" id=\"txt_genre\" onChange={(e) => setAlbumData({ ...albumData, musicGenre: e.target.value })} />\n                </CCol>\n                <CCol md={12}>\n                  <CFormLabel htmlFor=\"txt_style\">Style</CFormLabel>\n                  <CFormInput type=\"text\" id=\"txt_style\" onChange={(e) => setAlbumData({ ...albumData, style: e.target.value })} />\n                </CCol>\n                <div className=\"d-grid gap-2\">\n                  <CRow className=\"justify-content-between\">\n                    <CCol xs={12}>\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <CButton component=\"input\" type=\"button\" color=\"light\" value=\"목록\" onClick={goListClick} />\n                        <CButton component=\"input\" color=\"primary\" type=\"submit\" value=\"등록하기\" />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    </CContainer>\n  );\n};\n\nexport default SampleForm;\n"],"names":["SampleForm","navigate","useNavigate","midiaCD","useState","getCodeList","cntryCD","selectedDate","setSelectedDate","validated","setValidated","albumData","setAlbumData","name","artist","label","format","releaseDate","musicGenre","countryCD","mediaCD","style","series","useYn","_jsx","CContainer","children","CRow","CCol","_jsxs","CCard","className","CCardHeader","CCardBody","CForm","noValidate","onSubmit","async","e","preventDefault","console","log","currentTarget","checkValidity","response","axios","post","headers","data","alert","error","throwError","stopPropagation","xs","CFormFeedback","invalid","CFormSwitch","id","defaultChecked","onChange","target","value","CImage","rounded","thumbnail","align","src","ReactImg","width","height","CCardText","CFormInput","type","CFormLabel","htmlFor","CFormSelect","defaultValue","media","map","item","index","required","md","CFormTextarea","rows","country","display","placeItems","marginRight","CIcon","icon","cilCalendar","size","DatePicker","selected","date","formattedDate","toISOString","slice","dateFormat","shouldCloseOnSelect","minDate","Date","maxDate","CButton","component","color","onClick","goListClick"],"sourceRoot":""}