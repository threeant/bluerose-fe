{"version":3,"file":"static/js/9466.123584ac.chunk.js","mappings":"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","sources":["views/manage/EventReg.js"],"sourcesContent":["import React, { useState } from 'react'\nimport DatePicker from 'react-datepicker'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport CIcon from '@coreui/icons-react'\nimport { useNavigate } from 'react-router-dom'\nimport axios from 'axios'\nimport { getCodeList, throwError } from '../../common/utils'\nimport {\n  cilCalendar,\n  cifUs,\n} from '@coreui/icons';\n\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CForm,\n  CFormCheck,\n  CFormInput,\n  CFormFeedback,\n  CFormLabel,\n  CFormSelect,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n  CCardImage,\n  CCardText,\n  CFormTextarea,\n  CContainer,\n  CImage,\n  CFormSwitch,\n} from '@coreui/react';\nimport ReactImg from 'src/assets/images/image400.jpg'\nconst EventReg = () => {\n\n  /**********************************************************************\n   * 공통 영역\n  **********************************************************************/\n  const navigate = useNavigate();\n\n  const [midiaCD] = useState(getCodeList('MEDIA')); // 미디어CD\n  const [cntryCD] = useState(getCodeList('CNTRY')); // 발매국가CD\n\n  //목록이동\n  const goListClick = () => {\n    navigate('/music/EventList');\n  };\n  const [selectedDate, setSelectedDate] = useState(null);\n  const handleDateChange = date => {\n    const formattedDate = date.toISOString().slice(0, 10);\n    setSelectedDate(date);\n    setEventData({ ...EventData, releaseDate: formattedDate })\n  }\n  const [validated, setValidated] = useState(false);\n\n  const [EventData, setEventData] = useState({\n    //image : '',        //이미지\n    name: '',        //앨범명\n    artist: '',      //아티스트\n    label: '',       //라벨\n    format: '',      //포맷\n    releaseDate: '',      //발매일\n    musicGenre: '',      //장르\n    countryCD: '9',        //발매국가\n    mediaCD: '1',        //미디어\n    style: '',       //스타일\n    series: '',      //시리즈\n    useYn: true,      //사용여부\n    image: null\n  });\n\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const handleFileChange = (event) => {\n    // console.log(event);\n    // setEventData((prevEventData) => ({\n    //   ...prevEventData,\n    //   image: event.target.files[0]\n    // }));\n\n\n    const selectedImage = event.target.files[0];\n\n    if (selectedImage) {\n      // 이미지 파일인지 확인\n      if (selectedImage.type.startsWith('image/')) {\n        //setImage(selectedImage);\n\n        setEventData((prevEventData) => ({\n          ...prevEventData,\n          image: selectedImage\n        }));\n\n        // 이미지 미리보기 생성\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          setPreviewUrl(reader.result);\n        };\n        reader.readAsDataURL(selectedImage);\n      } else {\n        // 이미지 파일이 아닌 경우 초기화\n        setPreviewUrl(null);\n        setEventData((prevEventData) => ({\n          ...prevEventData,\n          image: null\n        }));\n        alert('이미지 파일만 업로드할 수 있습니다.');\n      }\n    }\n\n  };\n\n  const handleRemoveImage = () => {\n    // 이미지 제거\n    setPreviewUrl(null);\n    setEventData((prevEventData) => ({\n      ...prevEventData,\n      image: null\n    }));\n  };\n\n  //등록하기 API\n  const submitRegEvent = async (e) => {\n    e.preventDefault();\n\n    console.log(EventData);\n    setValidated(true);\n    const form = e.currentTarget;\n    if (form.checkValidity() === false) {\n      e.stopPropagation();\n      return;\n    }\n\n    const result = window.confirm('앨범을 등록하시겠습니까?');\n\n    if (!result) {\n      return;\n    }\n\n\n    try {\n      const response = await axios.post('http://localhost:8080/api/Events', EventData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        }\n      });\n\n      console.log('API 응답:', response.data);\n\n      // 폼 데이터를 초기화합니다.\n      setEventData({\n        name: '',        //앨범명\n        artist: '',      //아티스트\n        label: '',       //라벨\n        format: '',      //포맷\n        releaseDate: '2023-10-28',      //발매일\n        musicGenre: '',      //장르\n        countryCD: '9',        //발매국가\n        mediaCD: '1',        //미디어\n        style: '',       //스타일\n        series: '',      //시리즈\n        useYn: true,      //사용여부\n        image: null\n      });\n      alert('등록되었습니다.');\n      navigate('/music/EventList');\n    } catch (error) {\n      // API 요청이 실패한 경우 에러를 처리할 수 있습니다.\n      console.log(error);\n      throwError(error,navigate);\n    }\n\n  };\n  return (\n    <CContainer>\n      <CRow>\n        <CCol >\n          <CCard className=\"mb-4\">\n            <CCardHeader>\n              <strong>앨범등록</strong> <small></small>\n            </CCardHeader>\n            <CCardBody>\n              <CForm\n                className=\"row g-3 needs-validation\"\n                noValidate\n                validated={validated}\n                onSubmit={submitRegEvent}\n              >\n                <CCol xs={10} >\n                  <CFormLabel></CFormLabel>\n                </CCol>\n                <CCol xs={2} >\n                  <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>\n                  <CFormSwitch label=\"사용여부\" id=\"formSwitchCheckChecked\" defaultChecked={EventData.useYn} onChange={(e) => setEventData({ ...EventData, useYn: e.target.value })} />\n                </CCol>\n                <CCol xs={3}>\n                  {previewUrl ? (<CImage rounded thumbnail align=\"center\" src={previewUrl} width={150} height={150} />) : (\n                    <CImage rounded thumbnail align=\"center\" src={ReactImg} width={150} height={150} />\n                  )}\n                </CCol>\n                <CCol xs={9}>\n                  <CCardBody>\n                    <CCardText>\n                      <CFormInput type=\"file\" size=\"lg\" accept=\"image/*\" id=\"formFile\" onChange={handleFileChange} />\n                    </CCardText>\n                  </CCardBody>\n                </CCol>\n                {/* <CCol xs={2}>\n                  <CCardBody>\n                    <CCardText>\n                      {previewUrl ? (\n                        <CButton color=\"secondary\" onClick={handleRemoveImage}>삭제</CButton>) : ('')}\n                    </CCardText>\n                  </CCardBody>\n                </CCol> */}\n\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"lab_media\">미디어*</CFormLabel>\n                  <CFormSelect id=\"sel_media\" defaultValue={EventData.media} onChange={(e) => setEventData({ ...EventData, media: e.target.value })}  >\n                    {midiaCD.map((item, index) => (\n                      <option value={item.id} key={index}>{item.name}</option>\n                    ))}\n                  </CFormSelect>\n                  <CFormFeedback invalid>미디어를 선택해주세요</CFormFeedback>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputLabel\">Label</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputLabel\" onChange={(e) => setEventData({ ...EventData, label: e.target.value })} maxLength={100} />\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputName\">앨범명*</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputName\" required onChange={(e) => setEventData({ ...EventData, name: e.target.value })} maxLength={100} />\n                  <CFormFeedback invalid>앨범명을 입력해주세요.</CFormFeedback>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputAartist\">아티스트*</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputAartist\" required onChange={(e) => setEventData({ ...EventData, artist: e.target.value })} maxLength={100} />\n                  <CFormFeedback invalid>아티스트를 입력해주세요.</CFormFeedback>\n                </CCol>\n\n                <CCol md={12}>\n                  <CFormLabel htmlFor=\"inputSeries\">Series</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputSeries\" onChange={(e) => setEventData({ ...EventData, series: e.target.value })} maxLength={100} />\n                </CCol>\n\n                <CCol xs={12}>\n                  <CFormLabel htmlFor=\"inputFormat\">Format</CFormLabel>\n                  <CFormTextarea id=\"inputFormat\" rows=\"3\" onChange={(e) => setEventData({ ...EventData, format: e.target.value })} maxLength={250}></CFormTextarea>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputCountry\">발매국가*</CFormLabel>\n                  <div >\n                    <CFormSelect id=\"inputCountry\" onChange={(e) => setEventData({ ...EventData, country: e.target.value })}>\n                      {cntryCD.map((item, index) => (\n                        <option value={item.id} key={index}>{item.name}</option>\n                      ))}\n                    </CFormSelect>\n                    <CFormFeedback invalid>발매국가를 선택해주세요.</CFormFeedback>\n                  </div>\n                </CCol>\n                <CCol xs={6}>\n                  <CFormLabel htmlFor=\"inputReleaseDate\">발매일</CFormLabel>\n                  <div style={{ display: 'flex', width: '100%' }}>\n                    <div style={{ display: 'grid', placeItems: 'center', marginRight: 5 }}>\n                      <CIcon className=\"text-secondary\" icon={cilCalendar} size=\"lg\" />\n                    </div>\n                    <div style={{ width: '90%' }}>\n                      <DatePicker\n                        selected={selectedDate}\n                        onChange={handleDateChange}\n                        dateFormat={'yyyy-MM-dd'} // 날짜 형태\n                        shouldCloseOnSelect // 날짜를 선택하면 datepicker가 자동으로 닫힘\n                        minDate={new Date('2000-01-01')} // minDate 이전 날짜 선택 불가\n                        maxDate={new Date()} // maxDate 이후 날짜 선택 불가\n                        className=\"DatePicker\"\n                      />\n                    </div>\n                  </div>\n                </CCol>\n                <CCol md={12}>\n                  <CFormLabel htmlFor=\"inputGenre\">장르</CFormLabel>\n                  <CFormInput type=\"text\" id=\"inputGenre\" onChange={(e) => setEventData({ ...EventData, musicGenre: e.target.value })} maxLength={100} />\n                </CCol>\n                <CCol md={12}>\n                  <CFormLabel htmlFor=\"txtStyle\">Style</CFormLabel>\n                  <CFormInput type=\"text\" id=\"txtStyle\" onChange={(e) => setEventData({ ...EventData, style: e.target.value })} maxLength={100} />\n                </CCol>\n                <div className=\"d-grid gap-2\">\n                  <CRow className=\"justify-content-between\">\n                    <CCol xs={12}>\n                      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n                        <CButton component=\"input\" type=\"button\" color=\"light\" value=\"목록\" onClick={goListClick} />\n                        <CButton component=\"input\" color=\"primary\" type=\"submit\" value=\"등록하기\" />\n                      </div>\n                    </CCol>\n                  </CRow>\n                </div>\n              </CForm>\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow >\n    </CContainer>\n  );\n};\n\nexport default EventReg;\n"],"names":["EventReg","navigate","useNavigate","midiaCD","useState","getCodeList","cntryCD","selectedDate","setSelectedDate","validated","setValidated","EventData","setEventData","name","artist","label","format","releaseDate","musicGenre","countryCD","mediaCD","style","series","useYn","image","previewUrl","setPreviewUrl","_jsx","CContainer","children","CRow","CCol","_jsxs","CCard","className","CCardHeader","CCardBody","CForm","noValidate","onSubmit","async","e","preventDefault","console","log","currentTarget","checkValidity","stopPropagation","window","confirm","response","axios","post","headers","data","alert","error","throwError","xs","CFormLabel","CFormFeedback","invalid","CFormSwitch","id","defaultChecked","onChange","target","value","CImage","rounded","thumbnail","align","src","width","height","ReactImg","CCardText","CFormInput","type","size","accept","event","selectedImage","files","startsWith","prevEventData","reader","FileReader","onloadend","result","readAsDataURL","htmlFor","CFormSelect","defaultValue","media","map","item","index","maxLength","required","md","CFormTextarea","rows","country","display","placeItems","marginRight","CIcon","icon","cilCalendar","DatePicker","selected","date","formattedDate","toISOString","slice","dateFormat","shouldCloseOnSelect","minDate","Date","maxDate","CButton","component","color","onClick","goListClick"],"sourceRoot":""}