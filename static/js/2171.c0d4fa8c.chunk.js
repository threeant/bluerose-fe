"use strict";(self.webpackChunk_coreui_coreui_free_react_admin_template=self.webpackChunk_coreui_coreui_free_react_admin_template||[]).push([[2171],{52171:(e,l,s)=>{s.r(l),s.d(l,{default:()=>r});s(65043);var a=s(93946),i=s(17074),t=s(70579);const r=()=>(0,t.jsxs)(a.sK,{children:[(0,t.jsx)(a.UF,{xs:12,children:(0,t.jsxs)(a.E$,{className:"mb-4",children:[(0,t.jsx)(a.V0,{children:(0,t.jsx)("strong",{children:"React Floating labels"})}),(0,t.jsxs)(a.W6,{children:[(0,t.jsxs)("p",{className:"text-medium-emphasis small",children:["Wrap a pair of ",(0,t.jsx)("code",{children:"<CFormInput>"})," and ",(0,t.jsx)("code",{children:"<CFormLabel>"})," ","elements in ",(0,t.jsx)("code",{children:"CFormFloating"})," to enable floating labels with textual form fields. A ",(0,t.jsx)("code",{children:"placeholder"})," is required on each ",(0,t.jsx)("code",{children:"<CFormInput>"})," ","as our method of CSS-only floating labels uses the ",(0,t.jsx)("code",{children:":placeholder-shown"})," ","pseudo-element. Also note that the ",(0,t.jsx)("code",{children:"<CFormInput>"})," must come first so we can utilize a sibling selector (e.g., ",(0,t.jsx)("code",{children:"~"}),")."]}),(0,t.jsxs)(i.Eb,{href:"forms/floating-labels",children:[(0,t.jsxs)(a.SR,{className:"mb-3",children:[(0,t.jsx)(a.OG,{type:"email",id:"floatingInput",placeholder:"name@example.com"}),(0,t.jsx)(a.A6,{htmlFor:"floatingInput",children:"Email address"})]}),(0,t.jsxs)(a.SR,{children:[(0,t.jsx)(a.OG,{type:"password",id:"floatingPassword",placeholder:"Password"}),(0,t.jsx)(a.A6,{htmlFor:"floatingPassword",children:"Password"})]})]}),(0,t.jsxs)("p",{className:"text-medium-emphasis small",children:["When there's a ",(0,t.jsx)("code",{children:"value"})," already defined, ",(0,t.jsx)("code",{children:"<CFormLabel>"}),"s will automatically adjust to their floated position."]}),(0,t.jsx)(i.Eb,{href:"forms/floating-labels",children:(0,t.jsxs)(a.SR,{children:[(0,t.jsx)(a.OG,{type:"email",id:"floatingInputValue",placeholder:"name@example.com",defaultValue:"test@example.com"}),(0,t.jsx)(a.A6,{htmlFor:"floatingInputValue",children:"Input with value"})]})})]})]})}),(0,t.jsx)(a.UF,{xs:12,children:(0,t.jsxs)(a.E$,{className:"mb-4",children:[(0,t.jsxs)(a.V0,{children:[(0,t.jsx)("strong",{children:"React Floating labels"})," ",(0,t.jsx)("small",{children:"Textareas"})]}),(0,t.jsxs)(a.W6,{children:[(0,t.jsxs)("p",{className:"text-medium-emphasis small",children:["By default, ",(0,t.jsx)("code",{children:"<CFormTextarea>"}),"s will be the same height as"," ",(0,t.jsx)("code",{children:"<CFormInput>"}),"s."]}),(0,t.jsx)(i.Eb,{href:"forms/floating-labels#textareas",children:(0,t.jsxs)(a.SR,{children:[(0,t.jsx)(a.Im,{id:"floatingTextarea",placeholder:"Leave a comment here"}),(0,t.jsx)(a.A6,{htmlFor:"floatingTextarea",children:"Comments"})]})}),(0,t.jsxs)("p",{className:"text-medium-emphasis small",children:["To set a custom height on your ",(0,t.jsx)("code",{children:"<CFormTextarea;>"}),", do not use the"," ",(0,t.jsx)("code",{children:"rows"})," attribute. Instead, set an explicit ",(0,t.jsx)("code",{children:"height"})," (either inline or via custom CSS)."]}),(0,t.jsx)(i.Eb,{href:"forms/floating-labels#textareas",children:(0,t.jsxs)(a.SR,{children:[(0,t.jsx)(a.Im,{placeholder:"Leave a comment here",id:"floatingTextarea2",style:{height:"100px"}}),(0,t.jsx)(a.A6,{htmlFor:"floatingTextarea2",children:"Comments"})]})})]})]})}),(0,t.jsx)(a.UF,{xs:12,children:(0,t.jsxs)(a.E$,{className:"mb-4",children:[(0,t.jsxs)(a.V0,{children:[(0,t.jsx)("strong",{children:"React Floating labels"})," ",(0,t.jsx)("small",{children:"Selects"})]}),(0,t.jsxs)(a.W6,{children:[(0,t.jsxs)("p",{className:"text-medium-emphasis small",children:["Other than ",(0,t.jsx)("code",{children:"<CFormInput>"}),", floating labels are only available on"," ",(0,t.jsx)("code",{children:"<CFormSelect>"}),"s. They work in the same way, but unlike"," ",(0,t.jsx)("code",{children:"<CFormInput>"}),"s, they'll always show the"," ",(0,t.jsx)("code",{children:"<CFormLabel>"})," in its floated state."," ",(0,t.jsxs)("strong",{children:["Selects with ",(0,t.jsx)("code",{children:"size"})," and ",(0,t.jsx)("code",{children:"multiple"})," are not supported."]})]}),(0,t.jsx)(i.Eb,{href:"forms/floating-labels#selects",children:(0,t.jsxs)(a.SR,{children:[(0,t.jsxs)(a.MT,{id:"floatingSelect","aria-label":"Floating label select example",children:[(0,t.jsx)("option",{children:"Open this select menu"}),(0,t.jsx)("option",{value:"1",children:"One"}),(0,t.jsx)("option",{value:"2",children:"Two"}),(0,t.jsx)("option",{value:"3",children:"Three"})]}),(0,t.jsx)(a.A6,{htmlFor:"floatingSelect",children:"Works with selects"})]})})]})]})}),(0,t.jsx)(a.UF,{xs:12,children:(0,t.jsxs)(a.E$,{className:"mb-4",children:[(0,t.jsxs)(a.V0,{children:[(0,t.jsx)("strong",{children:"React Floating labels"})," ",(0,t.jsx)("small",{children:"Layout"})]}),(0,t.jsxs)(a.W6,{children:[(0,t.jsx)("p",{className:"text-medium-emphasis small",children:"When working with the CoreUI for Bootstrap grid system, be sure to place form elements within column classes."}),(0,t.jsx)(i.Eb,{href:"forms/floating-labels#layout",children:(0,t.jsxs)(a.sK,{xs:{gutter:2},children:[(0,t.jsx)(a.UF,{md:!0,children:(0,t.jsxs)(a.SR,{children:[(0,t.jsx)(a.OG,{type:"email",id:"floatingInputGrid",placeholder:"name@example.com",defaultValue:"email@example.com"}),(0,t.jsx)(a.A6,{htmlFor:"floatingInputGrid",children:"Email address"})]})}),(0,t.jsx)(a.UF,{md:!0,children:(0,t.jsxs)(a.SR,{children:[(0,t.jsxs)(a.MT,{id:"floatingSelectGrid","aria-label":"Floating label select example",children:[(0,t.jsx)("option",{children:"Open this select menu"}),(0,t.jsx)("option",{value:"1",children:"One"}),(0,t.jsx)("option",{value:"2",children:"Two"}),(0,t.jsx)("option",{value:"3",children:"Three"})]}),(0,t.jsx)(a.A6,{htmlFor:"floatingSelectGrid",children:"Works with selects"})]})})]})})]})]})})]})}}]);
//# sourceMappingURL=2171.c0d4fa8c.chunk.js.map